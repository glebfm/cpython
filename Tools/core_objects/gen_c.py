
import sys

HEADER = """\
/* This file generated by Tools/core_objects/gen_header.py */

#define unicode_object(len, txt...) \\
    { \\
    .ob_base = { \
        _PyObject_EXTRA_INIT \\
        1000, \\
        &PyUnicode_Type, \\
    }, \\
    .length = (len), \\
    .hash = -1, \\
    .state = { \\
        .interned = SSTATE_NOT_INTERNED, \\
        .kind = PyUnicode_1BYTE_KIND, \\
        .compact = 1, \\
        .ascii = 1, \\
        .ready = 1, \\
    }, \\
    .wstr = NULL, \\
    }, \\
    .text = txt

#define init_unicode_object(name) \\
    ref = (PyObject *)&_Py_id_strings.id_name, PyUnicode_InternInPlace(&ref), Py_DECREF(ref)

"""

def as_chars(name):
    return "{ " + ", ".join(f"'{c}'" for c in name) + "}"

def print_identifier_data(name):
    print(f"unicode_object({len(name)}, {as_chars(name)})")

INTERN_HEADER = """
void _Py_intern_identifiers(void)
{
    PyObject *ref;"""

def main(idsfile="identifiers.txt"):
    print(HEADER)
    print('#include "core_objects.h"')
    print()
    with open(idsfile) as fd:
        identifiers = [line.strip() for line in fd if line.strip()]
    print("_PyIdStrings _Py_id_strings = {")
    for name in identifiers:
        print(f"    .id_{name} = {{ unicode_object({len(name)}, {as_chars(name)}) }},")
    print("};")
    print()
    print()
    print(INTERN_HEADER)
    for name in identifiers:
        print(f"    init_unicode_object({name});")
    print("}")


if __name__ == '__main__':
    main(sys.argv[1])
